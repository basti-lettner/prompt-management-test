name: Create Customer Release PR

on:
  workflow_dispatch:
    inputs:
      customer:
        description: 'Customer folder to promote (e.g., customerA, customerB)'
        required: true
        type: 'choice'
        options:
          - customerA
          - customerB
      source_branch:
        description: 'Source branch to promote from'
        required: true
        type: 'choice'
        options:
          - main
          - staging
          - preview
      target_branch:
        description: 'Target branch for release (staging or prod)'
        required: true
        type: 'choice'
        options:
          - staging
          - prod
          - preview

jobs:
  create-release-pr:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify branches and fetch
        run: |
          # Fetch all branches
          git fetch origin
          
          # Verify source branch exists
          if ! git rev-parse --verify origin/${{ github.event.inputs.source_branch }}; then
            echo "Source branch '${{ github.event.inputs.source_branch }}' does not exist"
            exit 1
          fi
          
          # Verify target branch exists
          if ! git rev-parse --verify origin/${{ github.event.inputs.target_branch }}; then
            echo "Target branch '${{ github.event.inputs.target_branch }}' does not exist"
            exit 1
          fi

      - name: Create release branch
        run: |
          # Set Git configuration
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions@github.com"
          
          # Create a new branch for the PR from the target branch
          RELEASE_BRANCH="release/${{ github.event.inputs.customer }}-to-${{ github.event.inputs.target_branch }}"
          git checkout -b $RELEASE_BRANCH origin/${{ github.event.inputs.target_branch }}
          
          # Get commits that touched the customer folder
          COMMITS=$(git log origin/${{ github.event.inputs.target_branch }}..origin/${{ github.event.inputs.source_branch }} --format="%H" -- prompts/${{ github.event.inputs.customer }}/)
          
          if [ -z "$COMMITS" ]; then
            echo "No commits found for customer ${{ github.event.inputs.customer }}"
            exit 1
          fi
          
          # Cherry pick each commit
          echo "$COMMITS" | while read COMMIT; do
            if [ ! -z "$COMMIT" ]; then
              git cherry-pick -x $COMMIT || {
                echo "Failed to cherry-pick $COMMIT"
                exit 1
              }
            fi
          done

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: ${{ github.event.inputs.target_branch }}
          branch: release/${{ github.event.inputs.customer }}-to-${{ github.event.inputs.target_branch }}
          title: "Release ${{ github.event.inputs.customer }} to ${{ github.event.inputs.target_branch }}"
          body: |
            This PR promotes changes for ${{ github.event.inputs.customer }} from ${{ github.event.inputs.source_branch }} to ${{ github.event.inputs.target_branch }}.
            
            ### Changes Included
            Only changes affecting the `prompts/${{ github.event.inputs.customer }}/` directory have been cherry-picked.
            
            ### Review Instructions
            - Please verify that only changes for ${{ github.event.inputs.customer }} are included
            - Check that all files are in their expected state
            - Verify that no unintended changes were included
          labels: |
            customer-release
            ${{ github.event.inputs.customer }}